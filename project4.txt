#include<stdio.h>
#include<stdlib.h>
int main()
{
	int N,i,j,temp,btime=0,min,k=1,m=1,sum=0,wsum=0;
	printf("Enter total no of process:");
	scanf("%d",&N);
	int process[N],burstt[N],arrivalt[N];
	float priority[N],waitingt[N];
	for(i=0;i<N;i++)
	{
		process[i]=i+1;
	}
	for(i=0;i<N;i++)
	{
		printf("\nEnter burst time of process p%d\n",i+1);
		scanf("%d",&burstt[i]);
		printf("Enter Arrival time of process p%d\n",i+1);
		scanf("%d",&arrivalt[i]);
	}
	printf("\n\n-----------Process----------------\n");
	printf("\nProcess\tArrival Time\tBurst Time");
	for(i=0;i<N;i++)
	{
		printf("\np%d\t\t%d\t\t%d",i+1,arrivalt[i],burstt[i]);
	}
	for(i=0;i<N;i++)              //sorting of arrival time using bubble sort
	{
		for(j=0;j<N;j++)
		{
			if(arrivalt[i]<arrivalt[j])
			{
				temp=process[j];
				process[j]=process[i];
				process[i]=temp;
				temp=arrivalt[j];
				arrivalt[j]=arrivalt[i];
				arrivalt[i]=temp;
				temp=burstt[j];
				burstt[j]=burstt[i];
				burstt[i]=temp;
			}
		}
	}
	for(int i=0;i<N;i++)
	{
		priority[i]=1;
		waitingt[i]=0;
	}
	for(j=0;j<N;j++)                                                       
	{
		btime=btime+burstt[j];
		min=burstt[k];
		for(i=k;i<N;i++)
		{
			if(priority[i]>=priority[j])
			{
				if (btime>=arrivalt[i] && burstt[i]<min)
				{
				temp=process[k];
				process[k]=process[i];
				process[i]=temp;
				temp=arrivalt[k];
				arrivalt[k]=arrivalt[i];
				arrivalt[i]=temp;
				temp=burstt[k];
				burstt[k]=burstt[i];
				burstt[i]=temp;
				}
			}
		}
		for(int b=0;b<=j;b++)
		{
			sum+=burstt[b];
		}
		for(int a=m;a<N;a++)
		{
			waitingt[a]=sum-arrivalt[a];
			sum=sum+burstt[a];
		} 
		for(int c=m;c<N;c++)
		{
			priority[c]=1+ (waitingt[c]/burstt[c]);
		}
		sum=0;
		m++;
		k++;
	}
	printf("\n-----------Process----------------\n");
	printf("\nProcess\tArrival Time\tBurst Time\tProirity\twaiting time");
	for(i=0;i<N;i++)
	{
		printf("\np%d\t\t%d\t\t%d\t%.2f\t\t%.2f",process[i],arrivalt[i],burstt[i],priority[i],waitingt[i]);
	}
	return 0;
}